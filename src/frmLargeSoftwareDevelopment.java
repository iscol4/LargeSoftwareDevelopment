/*
Isaac Collier
April 19 2020
This program uses arrays, loops, if statements, and methods to create a rock paper scissors game
 */

/**
 *
 * @author Isaac
 * This class is teaching me about how to use different types of code together to make a more complicated code
 */
public class frmLargeSoftwareDevelopment extends javax.swing.JFrame {

    /**
     * Creates new form frmLargeSoftwareDevelopment
     */
    public frmLargeSoftwareDevelopment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtChoice1 = new javax.swing.JTextField();
        txtChoice2 = new javax.swing.JTextField();
        txtChoice3 = new javax.swing.JTextField();
        txtChoice4 = new javax.swing.JTextField();
        txtChoice5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblResults = new javax.swing.JLabel();
        lblComputerAns1 = new javax.swing.JLabel();
        lblComputerAns2 = new javax.swing.JLabel();
        lblComputerAns3 = new javax.swing.JLabel();
        lblComputerAns4 = new javax.swing.JLabel();
        lblComputerAns5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        jButton1.setText("Rock! Paper! Scissors!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Best of 5 Rock Paper Scissors Game");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblResults, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblComputerAns1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(16, 16, 16)))
                                .addComponent(lblComputerAns2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblComputerAns3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtChoice3, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtChoice4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(lblComputerAns4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtChoice5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblComputerAns5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChoice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChoice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChoice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComputerAns1)
                    .addComponent(lblComputerAns2)
                    .addComponent(lblComputerAns3)
                    .addComponent(lblComputerAns4)
                    .addComponent(lblComputerAns5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(lblResults)
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //determines who won based on scores
    public static int score (int playerPoints, int computerPoints)
{
    int whoWon;
     if (playerPoints > computerPoints)
        {
           whoWon = 1;
        }
        else if (playerPoints == computerPoints)
        {
             whoWon = 2;
        }
        else
        {
             whoWon = 3;
        }
        return whoWon;
       
}
    //grants a point to the player for every win
    public static int win (int playerPoints)
    {
        playerPoints = playerPoints + 1;
        return playerPoints;
    }
    //grants a point to the computer every time the player loses
      public static int loss (int computerPoints)
    {
        computerPoints = computerPoints + 1;
        return computerPoints;
    }
    

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // declares variables:
        String [] playerChoice = new String [5];
      String [] computerChoiceSign = new String [5];
  playerChoice[0] = txtChoice1.getText();
  playerChoice[1] = txtChoice2.getText();
  playerChoice[2] = txtChoice3.getText();
  playerChoice[3] = txtChoice4.getText();      
  playerChoice[4] = txtChoice5.getText();    
int [] playerChoiceNum = new int [5];  
int [] Sresults = new int [5]; 
int [] Rresults = new int [5]; 
int [] Presults = new int [5]; 
int [] computerChoice = new int [5];
int playerPoints = 0;
int computerPoints = 0;
        



//gets a random value between 1 and 3 to represent rock, paper, or scissors for all 5 rounds
          for (int i = 0; i <= 4; i = i + 1)
        {
            computerChoice[i] = (int)Math.round(Math.random() * 2 + 1);    
        }
          
          //puts random value generated above into actual words the user can understand
          for (int i = 0; i <= 4; i = i + 1)
          {
          if(computerChoice[i] == 3)
          {
              computerChoiceSign[i] = "scissors";
          }
          else if(computerChoice[i] == 2)
          {
              computerChoiceSign[i] = "paper";
          }
              else
              {
                      computerChoiceSign[i] = "rock";
                      }
          }
          lblComputerAns1.setText(computerChoiceSign[0]);
           lblComputerAns2.setText(computerChoiceSign[1]);
            lblComputerAns3.setText(computerChoiceSign[2]);
             lblComputerAns4.setText(computerChoiceSign[3]);
              lblComputerAns5.setText(computerChoiceSign[4]);
          //gives each user inputted value an integer value so its easier to compare them with the computer
                for (int i = 0; i <= 4; i = i + 1)
            {
       playerChoiceNum[i] = playerChoice[i].length(); //paper = 5, rock = 4, scissors = 8
            }
                
               
                //creates a number for every outcome divided into three sets based on the users choice for each round
                  for (int i = 0; i <= 4; i = i + 1)
                  {
                if ( playerChoiceNum[i] == 8)
                {
                    Sresults[i] = playerChoiceNum[i] - computerChoice[i];//Pscissors into Cscissors = 5, Pscissors into Crock = 7, Pscissors into Cpaper = 6
                }      
                else if (playerChoiceNum[i] == 4)  
                {
                    Rresults[i] = playerChoiceNum[i] - computerChoice[i];//Prock into Cscissors = 1,Prock into Crock = 3, Prock into Cpaper = 2
                }
                else
                {
                     Presults[i] = playerChoiceNum[i] - computerChoice[i];//Ppaper into Cscissors = 2, Ppaper into Crock = 4, Ppaper into Cpaper = 3|
                }
            }
             
                  
                  
                  //after figuring out which combo of signs happened in any round, the program moves to the subroutines to perform an operation to the scores
            for (int i = 0; i <= 4; i = i + 1)
            {
        if(Sresults[i] ==6)
        {
             playerPoints = win(playerPoints);//player Gets a point
        }
        else if(Sresults[i] ==5)
        {
            playerPoints = playerPoints; //tie
        }
        else if(Sresults[i] ==7)
        {
            computerPoints = loss(computerPoints); //CPU gets a point
        }
        else
        {
            playerPoints = playerPoints;
        }
            }
            
            
            
              //after figuring out which combo of signs happened in any round, the program moves to the subroutines to perform an operation to the scores
         for (int i = 0; i <= 4; i = i + 1)
            {
        if(Presults[i] ==4)
        {
             playerPoints = win(playerPoints);//player Gets a point
        }
        else if(Presults[i] ==3)
        {
           playerPoints = playerPoints;  //tie
        }
        else if (Presults[i] ==2)
        {
            computerPoints = loss(computerPoints); //CPU gets a point
        }
        else
        {
            playerPoints = playerPoints;
        }
            }
         
         
         
         
           //after figuring out which combo of signs happened in any round, the program moves to the subroutines to perform an operation to the scores
         for (int i = 0; i <= 4; i = i + 1)
            {
        if(Rresults[i] ==1)
        {
             playerPoints = win(playerPoints);//player Gets a point
        }
        else if(Rresults[i] ==3)
        {
            playerPoints = playerPoints; //tie
        }
        else if (Rresults[1] ==2)
        {
             computerPoints = loss(computerPoints);;//CPU gets a point
        }
        else
        {
            playerPoints = playerPoints;
        }
            }
         
         //gets score values from subroutines and determines who wins based on who has the higher score
       int whoWon = score(playerPoints,computerPoints);
       switch (whoWon)
       {
           case 1:
               lblResults.setText("You Won!");
               break;
           case 2:
               lblResults.setText("You Tied.");
               break;
           case 3:
           lblResults.setText("You Lost...");
               break;
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLargeSoftwareDevelopment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLargeSoftwareDevelopment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLargeSoftwareDevelopment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLargeSoftwareDevelopment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLargeSoftwareDevelopment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblComputerAns1;
    private javax.swing.JLabel lblComputerAns2;
    private javax.swing.JLabel lblComputerAns3;
    private javax.swing.JLabel lblComputerAns4;
    private javax.swing.JLabel lblComputerAns5;
    private javax.swing.JLabel lblResults;
    private javax.swing.JTextField txtChoice1;
    private javax.swing.JTextField txtChoice2;
    private javax.swing.JTextField txtChoice3;
    private javax.swing.JTextField txtChoice4;
    private javax.swing.JTextField txtChoice5;
    // End of variables declaration//GEN-END:variables
}
